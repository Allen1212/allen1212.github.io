<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Collectd-Graphite-Grafana Configuration]]></title>
    <url>%2F2020%2F12%2F14%2Fcollectd-graphite-grafana%2F</url>
    <content type="text"><![CDATA[System OverviewIntroductionArchitectureThe detailed configuration about these three instance is provided in the table below:|Virtual Machine|IP Address|Floating IP ||—————|———-|————-||instance-1 |10.0.5.9 |Auto-assigned||instance-2 |10.0.5.10 |Auto-assigned||monitor |10.0.5.11 |Auto-assigned| DeploymentCollectdCollectd is a daemon which collect system performance statistics and sends it to Graphite. Modify the Configuration File on Monitor InstanceInstall the Collectd package: 1sudo apt install collectd collectd-utils SSH to the monitor instance, and edit the configuration file of collectd. First, let us open the /etc/collectd/collectd.conf file. Remove the “#” to uncomment the Hostname line, and then change the default “localhost” to “monitor”. Then, find the LoadPlugin section by finding the commented-out LoadPlugin lines. Enable these plug-ins below to collect system metrics through uncommenting. 123456789LoadPlugin cpuLoadPlugin dfLoadPlugin diskLoadPlugin interfaceLoadPlugin loadLoadPlugin memoryLoadPlugin networkLoadPlugin processesLoadPlugin write_graphite Moving to the plugin configuration section and find the section of network plugin by looking for the &lt;Plugin network&gt; line. Uncomment and configure the content as below. 1234&lt;Plugin network&gt; &lt;Listen "127.0.0.1" "25826"&gt; &lt;/Listen&gt;&lt;/Plugin&gt; After that, find the write_graphite setting by looking for the &lt;Plugin write_graphite&gt; line. Uncomment and change the content as below, 123456789101112&lt;Plugin write_graphite&gt; &lt;Node "graphite"&gt; Host "10.0.5.11" Port "2003" Protocol "tcp" LogSendErrors true Prefix "collectd." StoreRates true AlwaysAppendDS false EscapeCharacter "_" &lt;/Node&gt;&lt;/Plugin&gt; Since we set the value of Prefix as collectd., all pushed data from this node will have following name method: collectd..&lt;collectd_plugin&gt;.. Storage Schema ConfigurationOn the terminal of monitor instance, open the storage-schemas.conf file add the content below after the collectd section, but before the [default_1min_for_1day] section: 123[collectd]pattern = ^collectd.*retentions = 10s:1h,1m:1d,10m:1y The regular expression pattern parameter “ ^collectd.* “ will match “Perfix” value which was added in the write_graphite plugin setting in /etc/collectd/collectd.conf file. Additionally, this example uses multiple retentions: 10s:1h : data for the last hour is spread in 10 second interval 1m:1d : all historical data for the last day is stored in 5 minute intervals 10m:1y : all historical data for the last year is stored in 10 minute intervals Afterwards, restart the carbon-cache service following the commands: 12sudo service carbon-cache restartsudo service collectd restart Configure Another InstancesFirst, uncomment and modify the Hostname and LoadPlugin sections just like we did in the monitor instance. Then, we need to find the network plugin setting, and then configure the content like this: 1234&lt;Plugin network&gt; &lt;Server "&lt;monitor_IP_address&gt;" "25826"&gt; &lt;/Server&gt;&lt;/Plugin&gt; The configuration of write_graphite plugin in instance-1 instance is same as the configuration in the monitor instance. GraphiteInstall Graphite1$ sudo apt-get install graphite-web graphite-carbon Install and Configure PostgreSQLInstall python libraries: 1$ sudo apt-get install postgresql libpq-dev python-psycopg2 Switch to postgres user and create DB user graphite_user 12$ su - postgres$ createuser graphite_user --pwprompt Create graphite_db and grafana_db databases owned by graphite_user: 12$ createdb -O graphite_user graphite_db$ createdb -O graphite_user grafana_db Once you finish it, you can switch back to previous user: 1$ logout Configure GraphiteEdit file /etc/graphite/local_settings.py and change DATABASES values we configured in PostgreSQL: 12345678910 DATABASES = &#123;&apos;default&apos;: &#123; &apos;NAME&apos;: &apos;graphite_db&apos;, &apos;ENGINE&apos;: &apos;django.db.backends.postgresql_psycopg2&apos;, &apos;USER&apos;: &apos;graphite_user&apos;, &apos;PASSWORD&apos;: &apos;graphite_user_password&apos;, &apos;HOST&apos;: &apos;127.0.0.1&apos;, &apos;PORT&apos;: &apos;&apos; &#125;&#125; Uncomment SECRET_KEY line: 1SECRET_KEY = &apos;secret_key_for_salting_hashes&apos; Enable authentication to save graph data: 1USE_REMOTE_USER Save and close the file. Sync the database: 1sudo graphite-manage syncdb Configure CarbonCarbon is a storage back-end of a Graphite installation. We need to configure the carbon to listen on the isolated network interface &lt;monitor_IP_address&gt; following the command line below. 1sudo sed -i.bak s/0.0.0.0/&lt;monitor_IP_address&gt;/g /etc/carbon/carbon.conf Copy default storage aggregation file to carbon directory: 1sudo cp /usr/share/doc/graphite-carbon/examples/storage-aggregation.conf.example /etc/carbon/storage-aggregation.conf Set CARBON_CACHE_ENABLED to true in the /etc/default/graphite-carbon file to enable Carbon to start on boot. After finishing it, save the file and start the carbon-cache daemon: 1sudo service carbon-cache start Install and Configure Apache + wsgiGrafanaTo add a third-party repository, you need add the following line into the /etc/apt/sources.list file. 1deb https://packagecloud.io/grafana/stable/debian/ wheezy main Add the package cloud key to be able to install signed packages: 1curl https://packagecloud.io/gpg.key | sudo apt-key add - After that, update the apt repositories and install Grafana: 12sudo apt updatesudo apt install grafana Use SSL and configure Grafana to listen on port 443: 12cd /etc/grafanasudo openssl req -x509 -newkey rsa:2048 -keyout cert.key -out cert.pem -days 3650 -nodes Open the /etc/grafana/grafana.ini and find the server section by looking for the [server] line. Set the parameters of protocol and http_port as below: 12protocol = httpshttp_port = 443 Then, find the https certs &amp; key file section and modify the content like this: 12cert_file = /etc/grafana/cert.pemcert_key = /etc/grafana/cert.key Finally, add the database settings in the database section: 123456[database]type = postgreshost = 127.0.0.1:5432name = grafana_dbuser = graphite_userpassword = &lt;graphite_user_password&gt; Save and close the file, when you are finished. In linux system, non-root user are unable to bind to ports lower than 1024. However, since the kernel version is after the 2.1, you can use setcap command to set specific capabilities to a program. Now, let us enable the Grafana to bind on any port lower than 1024. 1sudo setcap 'cap_net_bind_service=+ep' /usr/sbin/grafana-server Configure the Grafana server to start on boot: 1sudo update-rc.d grafana-server defaults 95 10 Start the Grafana server. 1sudo service grafana-server start Login the Grafana on https://&lt;monitor_IP_address&gt; using user admin and password admin. Performance]]></content>
  </entry>
</search>
